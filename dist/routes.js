"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.routes = void 0;
const express_1 = require("express");
const CreatePermissionController_1 = require("./controllers/CreatePermissionController");
const CreateProductController_1 = require("./controllers/CreateProductController");
const CreateRoleController_1 = require("./controllers/CreateRoleController");
const CreateRolePermissionController_1 = require("./controllers/CreateRolePermissionController");
const CreateUserAccessControlListController_1 = require("./controllers/CreateUserAccessControlListController");
const CreateUserController_1 = require("./controllers/CreateUserController");
const GetAllProductsController_1 = require("./controllers/GetAllProductsController");
const SessionController_1 = require("./controllers/SessionController");
const GetAllUsersController_1 = require("./controllers/GetAllUsersController");
const ensuredAuthenticated_1 = require("./middleware/ensuredAuthenticated");
const permissions_1 = require("./middleware/permissions");
const routes = express_1.Router();
exports.routes = routes;
routes.post("/user", new CreateUserController_1.CreateUserController().handle);
routes.get("/users", new GetAllUsersController_1.GetAllUsersController().handle);
routes.post("/sessions", new SessionController_1.SessionController().handle);
routes.get("/products", new GetAllProductsController_1.GetAllProductsController().handle);
routes.post("/products", ensuredAuthenticated_1.ensuredAuthenticated(), new CreateProductController_1.CreateProductController().handle);
routes.post("/roles", permissions_1.is(['Admin']), ensuredAuthenticated_1.ensuredAuthenticated(), new CreateRoleController_1.CreateRoleController().handle);
routes.post("/permissions", ensuredAuthenticated_1.ensuredAuthenticated(), new CreatePermissionController_1.CreatePermissionController().handle);
routes.post("/users/acl", ensuredAuthenticated_1.ensuredAuthenticated(), new CreateUserAccessControlListController_1.CreateUserAccessControlListController().handle);
routes.post("/roles/:roleId", new CreateRolePermissionController_1.CreateRolePermissionController().handle);
